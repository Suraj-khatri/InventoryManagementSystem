@model InventoryManagementSystem.Domain.INBranchVM
@{
    ViewBag.Title = "Remove Branch Assign";
}
<style>
    th {
        background: #439842;
        position: sticky;
        top: 0; /*Don't forget this, required for the stickiness*/
        box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.4);
    }
</style>
<div class="box box-primary">
    <div class="box-header with-border">
        <div class="box-title">Remove Branch Assign</div>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" type="button" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
    </div>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "TicketReport" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.ID)
        <div class="box-body formfont">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
        <div class="tablefont" style="overflow:auto; height:430px">
            <table class="table table-bordered noDataTable">
                <thead class="thead-dark">
                    <tr>
                        <th>S.N</th>
                        <th>Branch Name</th>
                        <th class="hidden">Id</th>
                        <th>Product Name</th>
                        <th><input type="checkbox" id="masterCheck" /></th>
                    </tr>
                </thead>
                <tbody>
                    @{ int i = 1;}
                    @foreach (var item in Model.INBranchVMList)
                    {
                        <tr>
                            <td>
                                @i
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Branches.BRANCH_NAME)
                            </td>
                            <td class="hidden">
                                @Html.DisplayFor(model => item.ID)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.INPRODUCTs.porduct_code)
                            </td>
                            <td>
                                <input type="checkbox" name="row-check" />
                            </td>
                        </tr>
                        i++;
                    }
                </tbody>
            </table>
        </div>
        <div class="box-footer">
            <div class="col-md-3 pull-right">
                <button type="button" data-loading-text="Removing..Please Wait.." id="removemultipleproduct" class="btn btn-danger"><i class="fa fa-remove"></i> Remove</button>
                <a href="/InProduct/Index/@(Model.INPRODUCTs.INITEMVM.parent_id)" class="btn btn-default"><i class="fa fa-close"></i> Cancel</a>
            </div>
        </div>
    }
</div>

<script>
    $(function () {
        $("#masterCheck").on("click", function () {
            if ($("input:checkbox").prop("checked")) {
                $("input:checkbox[name='row-check']").prop("checked", true);
            } else {
                $("input:checkbox[name='row-check']").prop("checked", false);
            }
        });

        $("input:checkbox[name='row-check']").on("change", function () {
            var total_check_boxes = $("input:checkbox[name='row-check']").length;
            var total_checked_boxes = $("input:checkbox[name='row-check']:checked").length;

            if (total_check_boxes === total_checked_boxes) {
                $("#masterCheck").prop("checked", true);
            }
            else {
                $("#masterCheck").prop("checked", false);
            }
        });
    });

    $("#removemultipleproduct").click(function (e) {
        var $btn = $(this);
        $btn.button('loading');
        var inbranch = {};
        var INItemVMList = [];
        $("table tr:not(:first)").each(function () {
            var tdlist = $(this).find("td");
            var Item = {
                id: $(tdlist[2]).text(),/* here id is inbranchassignID*/
                IsRowCheck: $(tdlist[4]).find("input:checkbox").is(':checked'),
            };
            INItemVMList.push(Item);
        })
        inbranch.INItemVMList = INItemVMList;
        inbranch.PRODUCT_ID=@Model.PRODUCT_ID;
        $.ajax({
            //async: true,
            url: "/BranchAssign/RemoveMultipleBranchAssign",
            type: "POST",
            //datatype: 'JSON',
            contentType: "application/json",
            data: JSON.stringify(inbranch),
            success: function (data) {
                if (data.success == true) {
                    $btn.button('reset');
                    alert(data.mes);
                    window.location.replace("/BranchAssign/Create/" + data.pid, true)
                }
                else {
                     $btn.button('reset');
                    alert(data.err);
                }
            },
            error: function (err) {
                $btn.button('reset');
                alert("error occured!!");
            }
        });
    });
</script>