@model InventoryManagementSystem.Domain.InRequisitionMessageVM
@{
    ViewBag.Title = "Dispatch Requisition";
}

<div class="box box-primary">
    <div class="box-header with-border">
        <div class="box-title"> <i class="fa fa-arrow-right"></i>Dispatch Requisition</div><a style="font-weight:bold"> ( Requesting Branch :- @Model.RequestingBranch )</a>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" type="button" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.id)
        <div class="box-body tablefont">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <h4 style="margin-bottom:10px; color:chocolate"><i class="fa fa-info-circle"></i> Dispatch Requisition</h4>
            <div id="tadd">
                <table class="table table-bordered table-sm noDataTable dispatchreq" style="overflow:auto" id="tbl_create">
                    <thead class="thead-dark" style="height:20px">
                        <tr>
                            <th class="hidden">Product Id</th>
                            <th>Product Name</th>
                            <th>Approved Quantity</th>
                            <th>Unit</th>
                            <th>Dispatched Qty</th>
                            <th>Remain To Dispatch</th>
                            <th><input type="checkbox" onclick="CheckRowBox()" id="masterCheck" /></th>
                            <th>Stock In Hand</th>
                            <th>Branch Stock</th>
                            <th>Other</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ int i = 1; }
                        @foreach (var item in Model.inreqList.OrderBy(x => x.ProductName.Trim()))
                        {
                            string printRow = i + "printRow";
                            string DispatchQty = i + "DispatchQty";
                            string RemainQty = i + "RemainQty";
                            string CheckedBox = i + "CheckedBox";
                            <tr>
                                <td class="hidden">
                                    @Html.DisplayFor(model => item.item)
                                </td>
                                <td id="pname">
                                    @Html.DisplayFor(model => item.ProductName)
                                </td>
                                <td id="qty">
                                    @Html.DisplayFor(model => item.Approved_Quantity)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.unit)
                                </td>
                                <td id="dispqty">
                                    <input type="number" id="@DispatchQty" name="disptchqty" onkeyup="CheckRowBox()" value="@item.Approved_Quantity" size="5" />
                                </td>
                                <td id="remaintodisp">
                                    <input type="number" class="no-border" id="@RemainQty" name="remaintodisp" value="0" size="5" readonly />
                                </td>
                                <td>
                                    <input type="checkbox" id="@CheckedBox" onclick="CheckRowBox()" name="row-check" />
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.stockinhand)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.branchstock)
                                </td>
                                <td>
                                    @if (item.serialstatus == true)
                                    {
                                        <a class="btn btn-xs btn-success" id="addserialno" data-toggle="modal" data-target="#myModal" title="Add">Add</a>
                                    }
                                </td>
                                <td class="hidden">
                                    @Html.DisplayFor(model => item.p_rate)
                                </td>
                            </tr>
                            i++;
                        }
                    </tbody>
                </table>
            </div>

            <fieldset style="list-style: circle; list-style-type: circle; width: 98%;">
                <legend style="color:forestgreen;font:bold;font-size:small">Requisition Information</legend>
                <div class="hidden">
                    @Html.TextBoxFor(model => model.id, new { id = "reqmesid" })
                </div>

                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Requ_Message, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Requ_Message, new { rows = "3", cols = "150", id = "reqmessage", @readonly = "readonly" })
                            @Html.ValidationMessageFor(x => x.Requ_Message, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.recommed_message, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.recommed_message, new { rows = "3", cols = "150", id = "recommendmessage", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Approver_message, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Approver_message, new { rows = "3", cols = "150", id = "approvemessage", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Delivery_Message, htmlAttributes: new { @class = "control-label required" })
                            @Html.TextAreaFor(model => model.Delivery_Message, new { rows = "3", cols = "150", id = "dispatchmessage" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Delivered_Date, htmlAttributes: new { @class = "control-label required" })
                            @Html.EditorFor(model => model.Delivered_Date, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.rejected_message, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.rejected_message, new { rows = "3", cols = "150", id = "rejtmessage" })
                        </div>
                    </div>
                </div>
            </fieldset>
            <div class="box-footer">
                <div class="col-md-12 col-md-offset-6">
                    <button type="button" data-loading-text="Saving..Please Wait.." id="savedispatch" class="btn btn-success"><i class="fa fa-save"></i> Dispatch</button>
                    @*<button type="button" id="savedispatch" class="btn btn-success"><i class="fa fa-save"></i> Dispatch</button>*@
                    @if (Model.AssignedRole.Trim() == "StoreKeeper(HeadOffice)" || Model.AssignedRole.Trim() == "Admin_User" || Model.AssignedRole.Trim() == "Administrator")
                    {
                        <a href="@Url.Action("PODetails", "BranchWiseHistory", new { id = Model.id })" class="btn btn-reddit" style="background-color:aqua" title="Generate P.O"><i class="fa fa-shopping-cart"></i> P.O</a>
                    }
                    <a class="btn btn-reddit" style="background-color:lightskyblue" title="Print" onclick="printDispatchDetails()" @*data-toggle="modal" data-target="#DispatchSlip"*@><i class="fa fa-print"></i> Print</a>
                    <button type="button" id="rejectRequisition" class="btn btn-reddit"><i class="fa fa-ban"></i> Reject</button>
                    @*<a href="@Url.Action("RejectRequisition", "DispatchRequisition", new { Id = Model.id })" class="btn btn-reddit"><i class="fa fa-ban"></i> Reject</a>*@
                    <a href="/DispatchRequisition/Index" class="btn btn-default"><i class="fa fa-close"></i> Cancel</a>
                </div>
            </div>
        </div>

        //modal
        <div class="modal fade" data-backdrop="static" data-keyboard="false" id="DispatchSlip" role="dialog" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <button class="btn btn-default btn-sm pull-right" title="Print" style="margin-top:-9px;margin-right:25px">
                            <i class="fa fa-print"></i>
                        </button>
                    </div>

                    <div id="printdispatchdata" style="min-height:100mm; padding:10px; font-family:'Arial' !important">
                        <div class=" modal-body">
                            <img style="height:50px;width:200px" src="~/BankImages/laxmilogo.png" />
                            <header style="text-align:center">
                                <h4 style="font:bold">Items To Dispatch</h4>
                            </header>
                            <div style="font-size:13px;display:flex;flex-direction:row;width:100%">
                                <div style="display:flex;flex-direction:column;width:60%">
                                    <p><span style="font-weight:bold">Req Id : </span><span>@Model.id</span> </p>
                                    <p><span style="font-weight:bold">Req User : </span><span>@Model.RequestedBy</span> </p>
                                    <p><span style="font-weight:bold">Req Branch : </span><span>@Model.RequestingBranch</span> </p>
                                </div>
                                <div style="display:flex;flex-direction:column;width:40%">
                                    <p><span style="font-weight:bold">Req Date : </span><span>@(Model.Requ_date.ToString("yyyy-MM-dd"))</span> </p>
                                    <p><span style="font-weight:bold">Req Dept. : </span><span>@Model.RequestingDepartment</span> </p>
                                    <p><span style="font-weight:bold">Req Branch Contact No. : </span><span>@Model.RequestingContactNo</span> </p>
                                </div>
                            </div>

                            <table style="font-size:11px" class="table table-responsive table-condensed table-bordered noDataTable">
                                <thead>
                                    <tr>
                                        <th style="width:3%;">
                                            S.N
                                        </th>
                                        <th>
                                            Product Name
                                        </th>
                                        <th>
                                            Unit
                                        </th>
                                        <th style="text-align:center">
                                            Approved Qty
                                        </th>
                                        <th style="text-align:center">
                                            Dispatch Qty
                                        </th>
                                        <th style="text-align:center">
                                            Remain Qty
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="dispatchdatalist">
                                    @{int j = 1;}
                                    @foreach (var item in Model.inreqList.OrderBy(x => x.ProductName.Trim()))
                                    {
                                        string printRow = j + "printRow";
                                        string printDispatchQty = j + "printDispatchQty";
                                        string printRemainQty = j + "printRemainQty";
                                        string serialNo = j + "serialNo";


                                        <tr id="@printRow" class="hidden">
                                            <td id="@serialNo"></td>
                                            <td id="pname">
                                                @Html.DisplayFor(model => item.ProductName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model => item.unit)
                                            </td>
                                            <td id="qty" style="text-align:center">
                                                @Html.DisplayFor(model => item.Approved_Quantity)
                                            </td>
                                            <td id="@printDispatchQty" style="text-align:center"></td>

                                            <td id="@printRemainQty" style="text-align:center"></td>
                                        </tr>
                                        j++;
                                    }
                                </tbody>
                            </table>

                            <div style="font-size:13px; display:flex; flex-direction:row; width:100%; justify-content:space-between; margin-top:5px;">
                                <div style="display:flex; flex-direction:column; width:48%; line-height:1.5;">
                                    <strong>Dispatch Date: @DateTime.Now.ToString("yyyy-MM-dd")</strong>
                                    <strong>Printed By: @Session["UserId"].ToString()</strong>
                                </div>
                               

                                <div style="display: flex; flex-direction: column; width: 48%; line-height: 1.5; transform: translateX(90px);">
                                    <br />
                                    <div style="display:flex; align-items:center; margin-bottom:10px;">
                                        <strong style="min-width:120px;">Receiver Signature: </strong>
                                        <div style="flex-grow:1;">
                                            <span style="display:inline-block; width:60%; border-bottom:1px solid black;"></span>
                                        </div>
                                    </div>
                                    <br />

                                    <div style="display:flex; align-items:center; margin-bottom:10px;">
                                        <strong style="min-width:120px;">Name/Staff ID:</strong>
                                        <div style="flex-grow:1;">
                                            <span style="display:inline-block; width:60%; border-bottom:1px solid black;"></span>
                                        </div>
                                    </div>
                                    <br />
                                    <br />
                                    <br />

                                    <div style="display:flex; align-items:center;">
                                        <strong style="min-width:120px;">Received Stamp:</strong>
                                        <div style="flex-grow:1;">
                                            <span style="display:inline-block; width:60%; border-bottom:1px solid black;"></span>
                                        </div>
                                    </div>
                                </div>

                            </div>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<div class="modal fade" id="myModal" role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" style="color:chocolate"><i class="fa fa-info-circle fa-lg"></i> <strong>Product Other Information</strong></h4>
            </div>
            <div class="modal-body list-modal">
                <div id="prodinfo">
                </div>
            </div>
            <div class="modal-footer">
                <a class="btn btn-xs btn-success serialnosave" title="Save">Save</a>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/Areas/DispatchRequisition/ViewApproved.js"></script>

<script>
    $(function () {
        $("#masterCheck").on("click", function () {
            if ($("input:checkbox").prop("checked")) {
                $("input:checkbox[name='row-check']").prop("checked", true);
            } else {
                $("input:checkbox[name='row-check']").prop("checked", false);
            }
        });

        $("input:checkbox[name='row-check']").on("change", function () {
            var total_check_boxes = $("input:checkbox[name='row-check']").length;
            var total_checked_boxes = $("input:checkbox[name='row-check']:checked").length;

            if (total_check_boxes === total_checked_boxes) {
                $("#masterCheck").prop("checked", true);
            }
            else {
                $("#masterCheck").prop("checked", false);
            }
        });
    });

    function printDispatchDetails() {
        $("#printdispatchdata").printThis({
            removeInline: false,
            pageTitle: "Dispatch Items Details",
            header: null
        });
    }

    function CheckRowBox() {
        setTimeout(function () {
            let tablelength = $("#tbl_create > tbody > tr").length;
            let j = 1;
            for (let i = 1; i <= tablelength; i++) {
                let dispQty = $('#' + i + 'DispatchQty').val();
                let remainQty = $('#' + i + 'RemainQty').val();

                $('#' + i + 'printDispatchQty').text(dispQty);
                $('#' + i + 'printRemainQty').text(remainQty);

                if ($('#' + i + 'CheckedBox').prop('checked')) {
                    $('#' + i + 'printRow').removeClass('hidden');
                    $('#' + i + 'serialNo').text(j);
                    j = j + 1;
                }
                else {
                    $('#' + i + 'printRow').addClass('hidden');
                }
            }
        }, 1000);
        return false;
    }

    $("#rejectRequisition").click(function () {
        var rejectmes = $('#rejtmessage').val().trim();
        if (!rejectmes) {
            alert("Please provide a rejection message before proceeding.");
            return false;
        }
        var r = confirm("Are you sure?")
        if (r == true) {
            var rejectmes = $('#rejtmessage').val();
            var ReqMesId = $('#reqmesid').val();
            $.ajax({
                url: "/DispatchRequisition/RejectRequisition",
                type: "POST",
                datatype: 'JSON',
                data: { reqmesid: ReqMesId, rejectmes: rejectmes },
                success: function (data) {
                    if (data.success == true) {
                        alert("Rejected Successfully");
                        window.location = "/DispatchRequisition/Index";
                    }
                    else {
                        alert("error occurred !!");
                    }
                },
                error: function (err) {
                    alert("error occurred !!");
                }
            });
            return true;
        }
        else {
            return false;
        }

    });
</script>
