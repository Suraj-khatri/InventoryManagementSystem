@model InventoryManagementSystem.Domain.BillInfoVM
@{
    ViewBag.Title = "Purchase Voucher entry";
}

<div class="box box-primary">
    <div class="box-header with-border">
        <div class="box-title"> <i class="fa fa-arrow-right"></i>Purchase Voucher Entry</div>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" type="button" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
    </div>
    @*@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()*@
    @Html.HiddenFor(x => x.pomid)
    @Html.HiddenFor(x => x.IsVatablePO)
    @Html.HiddenFor(x => x.VendorName)
<div class="box-body tablefont">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (Model.IsVatablePO == false)
    {
    <h4 style="margin-bottom:10px; color:chocolate"><i class="fa fa-info-circle"></i> Purchase Voucher Entry <span style="color:red !important">(non-vatable PE)</span></h4>
    }
    else
    {
        <h4 style="margin-bottom:10px; color:chocolate"><i class="fa fa-info-circle"></i> Purchase Voucher Entry</h4>
    }
    <fieldset style="list-style: circle; list-style-type: circle; width: 98%;">
        <legend style="color:forestgreen;font-size:small;font:bold">Product / Account Information:</legend>
        <div>
            <table class="table table-bordered noDataTable">
                <thead class="thead-dark" style="height:20px">
                    <tr>
                        <th>Product Name</th>
                        <th>Approved Qty</th>
                        <th style="width:10px">Received Qty</th>
                        <th>Rate</th>
                        <th>Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.poList.OrderBy(x => x.productname.Trim()))
                    {
                        <tr>
                            <td class="hidden">
                                @item.product_code
                            </td>
                            <td class="hidden">
                                @item.serialstatus
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.productname)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Received_Qty)
                            </td>
                            <td id="recQty">
                                @if (item.serialstatus)
                                {
                                    <input type="number" name="recivedqty" value="@item.Received_Qty" size="5" readonly/>
                                }
                                else
                                {
                                    <input type="number" name="recivedqty" value="@item.Received_Qty" size="5" />
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.rate)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.amount)
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td> Sub Total <br /> 13% VAT <br />Total Amount	 </td>
                        <td><span id="SubTotal">@Html.DisplayFor(model => model.SubTotal)</span> <br /><span id="TotalVAT">@Html.DisplayFor(model => model.vat_amt)</span>  <br /><span id="TotalBillAmount">@Html.DisplayFor(model => model.bill_amount)</span> </td>
                    </tr>
                </tfoot>

            </table>
        </div>

    </fieldset>
    <fieldset style="list-style: circle; list-style-type: circle; width: 98%;">
        <legend style="color:forestgreen;font:bold;font-size:small">Bill Information:</legend>
        <div class="row formfont">
            <div class="col-md-4 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.billno, htmlAttributes: new { @class = "control-label required" })
                    @Html.EditorFor(model => model.billno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.billno, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.bill_date, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.bill_date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.bill_date, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row formfont">
            <div class="col-md-4 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.bill_notes, htmlAttributes: new { @class = "control-label required" })
                    @Html.TextAreaFor(model => model.bill_notes, new { rows = "3", cols = "150" })
                    @Html.ValidationMessageFor(x => x.bill_notes, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </fieldset>
    <div class="box-footer">
        <div class="col-md-12 col-md-offset-9">
            <button type="submit" id="saveVoucher" class="btn btn-success"><i class="fa fa-save"></i> Save Voucher</button>
            <a href="/ReceivedOrderHistory/Index" class="btn btn-default"><i class="fa fa-close"></i> Cancel</a>
        </div>
    </div>
</div>
    @*}*@
</div>


<script>
    $(document).ready(function () {
        $('input[name="recivedqty"]').on('input', function () {
            updateTotals();
        });

        function updateTotals() {
            var subtotal = 0;
            $('input[name="recivedqty"]').each(function () {
                var qtyInput = $(this);
                var orderedQty = parseInt(qtyInput.closest('tr').find('td:eq(3)').text());
                var qty = parseInt(qtyInput.val());
                if (qty > orderedQty) {
                    alert('Received quantity cannot exceed Approved quantity.');
                    qtyInput.val(orderedQty);
                    qty = orderedQty;
                }
                var rate = parseFloat(qtyInput.closest('tr').find('td:eq(5)').text());
                var amount = qty * rate;
                qtyInput.closest('tr').find('td:eq(6)').text(amount.toFixed(2));
                subtotal += amount;
            });

            var vatPercentage = 0.13; // Assuming VAT is 13%
            var isVATablePO = $('#IsVatablePO').val();
            var vatAmount = 0;
            if (isVATablePO == "True") {
                vatAmount = subtotal * vatPercentage;
            }
            var totalAmount = subtotal + vatAmount;

            $('#SubTotal').text(subtotal.toFixed(2));
            $('#TotalVAT').text(vatAmount.toFixed(2));
            $('#TotalBillAmount').text(totalAmount.toFixed(2));
        }
    });

    $('#saveVoucher').click(function () {
        var r = confirm("Are you sure?")
        if (r) {
            var data = {};
            var polist = [];
            $("table tr:not(:first)").each(function () {
                var tdlist = $(this).find("td");
                var pItem = {
                    product_code: $(tdlist[0]).text(),
                    serialstatus: $(tdlist[1]).text(),
                    productname: $(tdlist[2]).text(),
                    qty: $(tdlist[3]).text(),
                    Received_Qty: $(this).closest('tr').find("#recQty :input[type='number']").val(),// $(tdlist[4]).val(),//
                    rate: $(tdlist[5]).text(),
                    amount: $(tdlist[6]).text()
                };
                polist.push(pItem);
            })
            data.pomid = $('#pomid').val();
            data.billno = $('#billno').val();
            data.bill_date = $('#bill_date').val();
            data.bill_notes = $('#bill_notes').val();
            data.vat_amt = $('#TotalVAT').text();
            data.bill_amount = $('#TotalBillAmount').text();
            data.polist = polist;
            data.VendorName = $('#VendorName').val();
            

            $.ajax({
                url: '/ReceiveApproveOrder/Create',
                type: 'POST',
                contentType: "application/json",
                data: JSON.stringify(data),
                success: function (res) {
                    if (res.success) {
                        showMessage(res.mes, "Success", 'success', function () {
                            window.location.href = '/ReceiveApproveOrder/Index';
                        });
                    }
                    else {
                        showMessage(res.mes, "Error", 'error');
                    }
                },
                error: function (err) {
                    alert("error occurred. Please try again later.")
                }
            });
        }
        else {
            return false;
        }
        
    });

    function showMessage(message, title, icon, callback) {
        swal({
            title: title,
            text: message,
            icon: icon,
            button: 'OK'
        }).then(function () {
            if (typeof callback === 'function') {
                callback();
            }
        });
    }

</script>


