@model InventoryManagementSystem.Domain.In_ProductVM
@{
   ViewBag.Title = Model.id == 0 ? "Add Product" : "Edit Product";
}

    <div class="box box-primary">
        <div class="box-header with-border">
            <div class="box-title">@((Model.id > 0) ? Html.Raw("<i class='fa fa-pencil'></i> Edit Product") : Html.Raw("<i class='fa fa-plus'></i> Add Product"))</div>
            <div class="box-tools pull-right">
                <button class="btn btn-box-tool" type="button" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.id)
            @Html.HiddenFor(x => x.item_id)
            <div class="box-body formfont">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            <label class="control-label">Product Group </label>
                            <input type="text" class="form-control" value="@ViewBag.ItemName" readonly="readonly" />
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.porduct_code, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.porduct_code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.porduct_code, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.product_desc, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.product_desc, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.product_desc, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.is_taxable, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.RadioButtonFor(model => model.is_taxable, true) Yes
                                @Html.RadioButtonFor(model => model.is_taxable, false) No
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.serial_no, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.RadioButtonFor(model => model.serial_no, true) Yes
                                @Html.RadioButtonFor(model => model.serial_no, false) No
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.batch_condition, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.RadioButtonFor(model => model.batch_condition, true) Yes
                                @Html.RadioButtonFor(model => model.batch_condition, false) No
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.is_active, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.RadioButtonFor(model => model.is_active, true) Yes
                                @Html.RadioButtonFor(model => model.is_active, false) No
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.sales_tolerence_plus, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.sales_tolerence_plus, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.purchase_tolerence_plus, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.purchase_tolerence_plus, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.sales_tolerence_minus, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.sales_tolerence_minus, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.sales_tolerence_minus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.purchase_tolerence_minus, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.purchase_tolerence_minus, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.sales_base_price, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.sales_base_price, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.purchase_base_price, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.purchase_base_price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.purchase_base_price, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.package_unit, htmlAttributes: new { @class = "control-label required" })
                            @Html.EditorFor(model => model.package_unit, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.package_unit, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.single_unit, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.single_unit, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.conversion_rate, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.conversion_rate, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.unit_discount, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.unit_discount, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.bulk_discount, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.bulk_discount, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.make, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.make, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.model, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.model, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ext_fld1, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ext_fld1, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ext_fld2, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ext_fld2, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <div class="col-md-12 col-md-offset-9">
                        <a href="/InItem/Index" class="btn btn-default"><i class="fa fa-close"></i> Cancel</a>
                        <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Save</button>
                    </div>
                </div>
            </div>
        }
    </div>
@Scripts.Render("~/bundles/jqueryval")


